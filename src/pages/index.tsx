import { Menu, Transition } from "@headlessui/react";
import { type NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { Fragment } from "react";
import { api } from "../utils/api";

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({
    text: "world",
  });

  return (
    <>
      <Head>
        <title>Infinity</title>
        <meta name="description" content="Generated by create-t3-app" />
        <Link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Create <span className="text-[hsl(280,100%,70%)]">T3</span> App
          </h1>
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="https://create.t3.gg/en/usage/first-steps"
              target="_blank"
            >
              <h3 className="text-2xl font-bold"></h3>
              <div className="text-lg">
                Just the basics - Everything you need to know to set up your
                database and authentication.
              </div>
            </Link>
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="https://create.t3.gg/en/introduction"
              target="_blank"
            >
              <h3 className="text-2xl font-bold">Documentation â†’</h3>
              <div className="text-lg">
                Learn more about Create T3 App, the libraries it uses, and how
                to deploy it.
              </div>
            </Link>
          </div>
          <div className="flex flex-col items-center gap-2">
            <p className="text-2xl text-white">
              {hello.data ? hello.data.greeting : "Loading tRPC query..."}
            </p>
            <AuthShowcase />
          </div>
        </div>
      </main> */}

      <main className="h-screen max-w-full bg-white">
        <div className=" mx-5 h-screen max-w-full bg-white md:mx-20 xl:mx-48">
          <div className="flex h-28 items-center justify-between">
            <div className="flex w-auto items-center justify-between">
              <Image
                src="/logo.png"
                alt="logo"
                className="object-cover "
                width={100}
                height={100}
              />
              <h1 className="font-pacifico text-4xl not-italic leading-[7rem] text-black/80 md:text-5xl lg:text-6xl">
                Infinity
              </h1>
            </div>

            <div className="hidden items-center justify-between font-montserrat sm:flex sm:w-48 md:w-52 lg:w-80">
              <button className="text-lg font-normal md:text-xl lg:text-2xl">
                <Link href="/signIn">Sign in</Link>
              </button>
              <button className="rounded-full bg-button px-3 py-2 text-lg font-normal text-white md:text-xl lg:px-5 lg:text-2xl">
                <Link href="/signUp">Sign up</Link>
              </button>
            </div>

            <div className="sm:hidden">
              <Menu as="div" className="relative inline-block text-left">
                <div>
                  <Menu.Button className="border-spacing-1 rounded-lg border border-black bg-white p-2 hover:bg-slate-100">
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 24 24"
                      strokeWidth={1.5}
                      stroke="currentColor"
                      className="h-6 w-6"
                    >
                      <path
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"
                      />
                    </svg>
                  </Menu.Button>
                </div>
                <Transition
                  as={Fragment}
                  enter="transition ease-out duration-100"
                  enterFrom="transform opacity-0 scale-95"
                  enterTo="transform opacity-100 scale-100"
                  leave="transition ease-in duration-75"
                  leaveFrom="transform opacity-100 scale-100"
                  leaveTo="transform opacity-0 scale-95"
                >
                  <Menu.Items className="absolute right-0 mt-4 w-40 origin-top-right divide-y divide-gray-100 rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none">
                    <div className="px-1 py-1 ">
                      <Menu.Item>
                        {({ active }) => (
                          <button
                            className={`${
                              active ? "bg-button text-white" : "text-gray-900"
                            } group flex w-full items-center rounded-md px-2 py-2 text-base`}
                          >
                            <Link href="/signUp">Sign up</Link>
                          </button>
                        )}
                      </Menu.Item>
                    </div>
                    <div className="px-1 py-1">
                      <Menu.Item>
                        {({ active }) => (
                          <button
                            className={`${
                              active ? "bg-button text-white" : "text-gray-900"
                            } group flex w-full items-center rounded-md px-2 py-2 text-base`}
                          >
                            <Link href="/signIn">Sign in</Link>
                          </button>
                        )}
                      </Menu.Item>
                    </div>
                  </Menu.Items>
                </Transition>
              </Menu>
            </div>
          </div>

          <div className="flex h-[calc(100vh-7rem)] max-w-full items-center pb-20 ">
            <div className="">
              <div className="w-2/5">
                <span className=" text-5xl font-bold text-black/80 sm:text-7xl lg:text-8xl">
                  Growing unstoppably
                </span>
              </div>

              <span className="mt-5 inline-block font-montserrat text-xl font-normal text-black/80 sm:mt-10 sm:text-2xl lg:text-3xl">
                Discover stories and expand your knowledge about more fields
              </span>
            </div>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
